@model AnkiFlashCards.Models.DTO.CardListDto

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <h1>Search results for  @Html.Raw("\"")@Html.DisplayFor(model => model.SearchFor)@Html.Raw("\"") in resource: @Html.DisplayFor(m => m.ResourceTitle)</h1>
<nav class="navbar navbar-expand-sm bg-dark navbar-dark">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="collapsibleNavbar">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" asp-controller="Deck" asp-action="Index" asp-route-ParentId="@Model.ResourceId">Back to all decks in @Html.DisplayFor(m=>m.ResourceTitle)</a>
            </li>
        </ul>
    </div>
</nav>
<div>
    <hr />
    @Html.HiddenFor(c => c.DeckId)
    @Html.HiddenFor(c => c.ResourceId)
    <dl class="row">        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CardCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CardCount)
        </dd>
    </dl>
    <div>
        @await Component.InvokeAsync("Pagination", new { itemCount = Model.TotalCardCount, itemsPerPage = ViewBag.ItemsPerPage, AdditionalRouteValues = new KeyValuePair<string, string>[] { new KeyValuePair<string, string>("ResourceId", Model.ResourceId.ToString()), new KeyValuePair<string, string>("SearchFor", Model.SearchFor) } })
    </div>
    <table class="table">
        <thead>
            <tr class="row">
                <th class="col-md-1 col-sm-1 col-lg-1">
                    ID
                </th>
                <th class="col-md-3 col-sm-3 col-lg-3">
                    Front
                </th>
                <th class="col-md-5 col-sm-5 col-lg-5">
                    Back
                </th>
                <th class="col-md-1 col-sm-1 col-lg-1">
                    Level
                </th>
                <th class="col-md-2 col-sm-2 col-lg-2"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Cards)
            {
            <tr class="row">
                <th class="col-md-1 col-sm-1 col-lg-1">
                    @Html.DisplayFor(modelItem => item.CardId)
                </th>
                <td class="col-md-3 col-sm-3 col-lg-3">
                    @Html.DisplayFor(modelItem => item.ShortFront)
                </td>
                <td class="col-md-5 col-sm-5 col-lg-5">
                    @Html.DisplayFor(modelItem => item.ShortBack)
                </td>
                <td class="col-md-1 col-sm-1 col-lg-1">
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td class="col-md-2 col-sm-2 col-lg-2">
                    @Html.ActionLink("Details", "View", new { CardId = item.CardId })
                </td>
            </tr>
            }
        </tbody>
    </table>
    <hr />
</div>
